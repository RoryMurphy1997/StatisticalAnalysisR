names(test) <- "Names"
test <- c(1,2,3,4,5)
names(test) <- "Names"
test
meansAndSD <- function(x, byrows = TRUE)
{
#If rows are chosen
if(byrows == TRUE)
{
#Find row means
means <- apply(X, MARGIN = 1, mean)
#Apply mean names
names(means) <- "Row 1 Means"
#Find row standard deviations
stdevs <- apply(X, MARGIN = 1, sd)
#Apply standard deviation names
names(stdevs)<- "Row 1 St Dev"
#Create return list
ret <- list(means = means, stdevs = stdevs)
#Apply row names
return(ret)
}
else
{
}
}
ListOfMeansAndSD <- meansAndSD(X)
ListOfMeansAndSD$means
test <- c(1,2,3,4,5)
apply(test, MARGIN = 1, names <- "Names")
test
test <- c(1,2,3,4,5)
apply(test, MARGIN = 1, names("Names"))
test
test <- c(1,2,3,4,5)
apply(test, MARGIN = 1, names)
test
#Part 2
?names
#Function to apply names
names <- function(x)
{
names(x) <- "Row 1 Means"
}
valueNames <- function(x)
{
names(x) <- "Row 1 Means"
}
View(names)
valueNames <- function(x)
{
names(x) <- "Row 1 Means"
}
test <- c(1,2,3,4,5)
valueNames(test)
test
#Part 1
#Generate 1000*100 matrix of standard normal random variates.
X <- matrix(rnorm(1000 * 100, mean = 0, sd = 1), nrow = 1000, ncol = 100)
valueNames <- function(x)
{
names(x) <- "Row 1 Means"
}
apply(test, MARGIN = 1, valueNames)
test <- c(1,2,3,4,5)
apply(test, MARGIN = 1, valueNames)
?apply
apply(test, valueNames)
apply(test, FUN = valueNames)
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
apply(test, MARGIN = 1,valueNames)
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
test
apply(test, MARGIN = 1,valueNames)
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
names(test[1,]) <- "names"
test
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
rownames(test[1,]) <- "names"
test
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
rownames(test[]) <- "names"
test
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
rownames(test) <- "names"
test
?names
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
apply(test, MARGIN = 1, names = "names")
test
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
apply(test, MARGIN = 1, valueNames)
test
cat(test)
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
apply(test, MARGIN = 1, valueNames)
cat(test)
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
names(test) <- apply(test, MARGIN = 1, valueNames)
cat(test)
#Part 3
hist(X)
#Part 3
?hist
#Set histogram of row means
hist(rowMeans)
rowMeans <- apply(X, MARGIN = 1, mean)
rowMeans
#Set histogram of row means
hist(rowMeans)
?apply
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
for(i in 1:nrow(test))
{
#Create name
name <- paste("Row 1 Mean",i)
names(test[i,]) <- name
}
test
x <- 2
names(x)
names(x) <- "number"
x
names(x)
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
for(i in 1:nrow(test))
{
#Create name
testName <- paste("Row 1 Mean",i)
names(test[i,]) <- testName
}
test
test <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
for(i in 1:nrow(test))
{
#Create name
testName <- paste("Row ",i, "Mean")
rownames(test) <- testName
}
test
meansAndSD <- function(x, byrows = TRUE)
{
#If rows are chosen
if(byrows == TRUE)
{
#Find row means
means <- apply(X, MARGIN = 1, mean)
#Find row standard deviations
stdevs <- apply(X, MARGIN = 1, sd)
#Create return list
ret <- list(means = means, stdevs = stdevs)
#Apply row names
names(ret$means) <- "Row 1 Means"
return(ret)
}
#If columns are chosen
else
{
}
}
ListOfMeansAndSD <- meansAndSD(X)
ListOfMeansAndSD
meansAndSD <- function(x, byrows = TRUE)
{
#If rows are chosen
if(byrows == TRUE)
{
#Find row means
means <- apply(X, MARGIN = 1, mean)
#Find row standard deviations
stdevs <- apply(X, MARGIN = 1, sd)
#Create return list
ret <- list(means = means, stdevs = stdevs)
#Apply row names
names(ret)[1] <- "Row 1 Means"
return(ret)
}
#If columns are chosen
else
{
}
}
ListOfMeansAndSD <- meansAndSD(X)
ListOfMeansAndSD
?seq
meansAndSD <- function(x, byrows = TRUE)
{
#If rows are chosen
if(byrows == TRUE)
{
#Find row means
means <- apply(X, MARGIN = 1, mean)
names(means)[1] <- "Row 1 Means"
#Find row standard deviations
stdevs <- apply(X, MARGIN = 1, sd)
#Create return list
ret <- list(means = means, stdevs = stdevs)
return(ret)
}
#If columns are chosen
else
{
}
}
ListOfMeansAndSD <- meansAndSD(X)
ListOfMeansAndSD
?rep
?seq
#Part 2
?rep
meansAndSD <- function(x, byrows = 1)
{
#Find row values if byrows = 1 or column values if byrows = 2
#Find means
means <- apply(X, MARGIN = byrows, mean)
#Generate names for means
for(i in 1:length(means))
{
if(byrows = 1)
{
names(means)[i] <- paste("Rows ",i," Mean")
}
else
{
names(means)[i] <- paste("Column ",i," Mean")
}
}
#Find standard deviations
stdevs <- apply(X, MARGIN = byrows, sd)
#Generate names for st devs
for(i in 1:length(means))
{
if(byrows = 1)
{
names(means)[i] <- paste("Rows ",i," St Dev")
}
else
{
names(means)[i] <- paste("Column ",i," St Dev")
}
}
#Create return list
ret <- list(means = means, stdevs = stdevs)
return(ret)
}
meansAndSD <- function(x, byrows = 1)
{
#Find row values if byrows = 1 or column values if byrows = 2
#Find means
means <- apply(X, MARGIN = byrows, mean)
#Generate names for means
for(i in 1:length(means))
{
if(byrows == 1)
{
names(means)[i] <- paste("Rows ",i," Mean")
}
else
{
names(means)[i] <- paste("Column ",i," Mean")
}
}
#Find standard deviations
stdevs <- apply(X, MARGIN = byrows, sd)
#Generate names for st devs
for(i in 1:length(means))
{
if(byrows == 1)
{
names(means)[i] <- paste("Rows ",i," St Dev")
}
else
{
names(means)[i] <- paste("Column ",i," St Dev")
}
}
#Create return list
ret <- list(means = means, stdevs = stdevs)
return(ret)
}
ListOfMeansAndSD <- meansAndSD(X)
ListOfMeansAndSD
cat(ListOfMeansAndSD)
#Print Values
cat(ListOfMeansAndSD$means)
#Print Values
print(ListOfMeansAndSD$means)
ListOfMeansAndSD
#Print Values
print(ListOfMeansAndSD$means)
meansAndSD <- function(x, byrows = 1)
{
#Find row values if byrows = 1 or column values if byrows = 2
#Find means
means <- apply(X, MARGIN = byrows, mean)
#Generate names for means
for(i in 1:length(means))
{
if(byrows == 1)
{
names(means)[i] <- paste("Rows ",i," Mean")
}
else
{
names(means)[i] <- paste("Column ",i," Mean")
}
}
#Find standard deviations
stdevs <- apply(X, MARGIN = byrows, sd)
#Generate names for st devs
for(i in 1:length(stdevs))
{
if(byrows == 1)
{
names(stdevs)[i] <- paste("Rows ",i," St Dev")
}
else
{
names(stdevs)[i] <- paste("Column ",i," St Dev")
}
}
#Create return list
ret <- list(means = means, stdevs = stdevs)
return(ret)
}
ListOfMeansAndSD <- meansAndSD(X)
#Print Values
print(ListOfMeansAndSD$means)
#Print Values
ListOfMeansAndSD$means
#Print Values
ListOfMeansAndSD
paste("Row",1:100,"Mean")
#Print Values
ListOfMeansAndSD
ListOfMeansAndSD <- meansAndSD(X, 2)
#Print Values
ListOfMeansAndSD
meansAndSD <- function(x, bycols = 0)
{
#Find means
means <- apply(X, MARGIN = bycols + 1, mean)
#Give names to means
if(bycols == 0)
{
#Apply Row if bycols = 0
names(means) <- paste("Row",1:length(means),"Mean")
}
else
{
#Apply Column if bycols = 1
names(means) <- paste("Column",1:length(means),"Mean")
}
#Find standard deviations
stdevs <- apply(X, MARGIN = bycols + 1, sd)
#Generate names for st devs
#Give names to st devs
if(bycols == 0)
{
#Apply Row if bycols = 0
names(stdevs) <- paste("Row",1:length(stdevs),"St Dev")
}
else
{
#Apply Column if bycols = 1
names(stdevs) <- paste("Column",1:length(stdevs),"St Dev")
}
#Create return list
ret <- list(means = means, stdevs = stdevs)
return(ret)
}
ListOfMeansAndSD <- meansAndSD(X, 1)
#Print Values
ListOfMeansAndSD
meansAndSD <- function(x, bycols = 0)
{
#If bycols is not 0 or 1, send error
if(bycols != 0 && bycols != 1)
{
stop("bycols should be 0 or 1")
}
#Find means
means <- apply(X, MARGIN = bycols + 1, mean)
#Give names to means
if(bycols == 0)
{
#Apply Row if bycols = 0
names(means) <- paste("Row",1:length(means),"Mean")
}
else
{
#Apply Column if bycols = 1
names(means) <- paste("Column",1:length(means),"Mean")
}
#Find standard deviations
stdevs <- apply(X, MARGIN = bycols + 1, sd)
#Generate names for st devs
#Give names to st devs
if(bycols == 0)
{
#Apply Row if bycols = 0
names(stdevs) <- paste("Row",1:length(stdevs),"St Dev")
}
else
{
#Apply Column if bycols = 1
names(stdevs) <- paste("Column",1:length(stdevs),"St Dev")
}
#Create return list
ret <- list(means = means, stdevs = stdevs)
return(ret)
}
ListOfMeansAndSD <- meansAndSD(X, 1)
#Print Values
ListOfMeansAndSD
ListOfMeansAndSD <- meansAndSD(X, 0)
#Print Values
ListOfMeansAndSD
#Row values
ListOfMeansAndSDRows <- meansAndSD(X, 0)
ListOfMeansAndSDRows
#Column values
ListOfMeansAndSDRows <- meansAndSD(X, 1)
ListOfMeansAndSDRows
meanAndSD(x,2)
meansAndSD(x,2)
meansAndSD(x,2)
meansAndSD(x,2)
meansAndSD <- function(x, bycols = 0)
{
#If bycols is not 0 or 1, send error
if(bycols != 0 && bycols != 1)
{
stop("bycols should be 0 or 1")
}
else
{
#Find means
means <- apply(X, MARGIN = bycols + 1, mean)
#Give names to means
if(bycols == 0)
{
#Apply Row if bycols = 0
names(means) <- paste("Row",1:length(means),"Mean")
}
else
{
#Apply Column if bycols = 1
names(means) <- paste("Column",1:length(means),"Mean")
}
#Find standard deviations
stdevs <- apply(X, MARGIN = bycols + 1, sd)
#Generate names for st devs
#Give names to st devs
if(bycols == 0)
{
#Apply Row if bycols = 0
names(stdevs) <- paste("Row",1:length(stdevs),"St Dev")
}
else
{
#Apply Column if bycols = 1
names(stdevs) <- paste("Column",1:length(stdevs),"St Dev")
}
#Create return list
ret <- list(means = means, stdevs = stdevs)
return(ret)
}
}
meansAndSD(x,2)
meansAndSD(x,5)
#Part 3
?hist
#Set histogram of row means
hist(rowMeans, xlim = mean(rowMeans) + 3 * (sd(rowMeans)/sqrt(length(rowMeans))))
#Set histogram of row means
hist(rowMeans, xlim = (mean(rowMeans) - 3 * (sd(rowMeans)/sqrt(length(rowMeans)))):(mean(rowMeans) + 3 * (sd(rowMeans)/sqrt(length(rowMeans)))))
#Set histogram of row means
hist(rowMeans, xlim = c((mean(rowMeans) - 3 * (sd(rowMeans)/sqrt(length(rowMeans)))),(mean(rowMeans) + 3 * (sd(rowMeans)/sqrt(length(rowMeans))))))
#Set histogram of row means
hist(rowMeans, xlim = c((mean(rowMeans) - 3 * (sd(rowMeans)))),(mean(rowMeans) + 3 * (sd(rowMeans))))))
#Set histogram of row means
hist(rowMeans, xlim = c((mean(rowMeans) - 3 * (sd(rowMeans)))),(mean(rowMeans) + 3 * (sd(rowMeans)))))
hist(rowMeans, xlim = limits)
limits <- c(mean(rowMeans) - 3 * sd(rowMeans),mean(rowMeans) + 3 * sd(rowMeans))
hist(rowMeans, xlim = limits)
X2 <- matrix(rnorm(1000*1000, mean = 0, sd = 1), nrow = 1000, ncol = 1000)
#Find row means
rowMeans2 <- apply(X2, MARGIN = 1, mean)
hist(rowMeans2, xlim = limits)
limits <- c(mean(rowMeans) - 3 * sd(rowMeans),mean(rowMeans) + 3 * sd(rowMeans))
hist(rowMeans, xlim = limits)
X2 <- matrix(rnorm(1000*1000, mean = 0, sd = 1), nrow = 1000, ncol = 1000)
#Find row means
rowMeans2 <- apply(X2, MARGIN = 1, mean)
hist(rowMeans2, xlim = limits)
limits <- c(mean(rowMeans) - 3 * sd(rowMeans),mean(rowMeans) + 3 * sd(rowMeans))
hist(rowMeans, xlim = limits)
spreadOne <- sd(X)/sqrt(X)
spreadOne
spreadOne <- sd(rowMeans)/sqrt(rowMeans)
spreadOne
spreadOne <- sd(rowMeans)/sqrt(length(rowMeans))
spreadOne
spreadTwo <- sd(rowMeans2)/sqrt(length(rowMeans2))
spreadTwo
spreadOne <- sd(rowMeans)/sqrt(length(rowMeans))
cat(spreadOne)
#Spread 2
spreadTwo <- sd(rowMeans2)/sqrt(length(rowMeans2))
cat(spreadTwo)
cat(spreadOne/spreadTwo)
