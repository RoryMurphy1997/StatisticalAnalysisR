#Print generated advice
str(advice,"\n")
X <- numeric(10)
X
X <- c(3,6,9)
#Second item of X
X[2]
#or
age[2:4]
age <- c(63,67,72,74)
weight <- c(67.2, 83.1, 75.5, 76.5)
county <- c("Dublin", "Meath", "Dublin", "Kilkenny")
#or
age[2:4]
#All ages except first
age[-1]
#Matrix
X <- marix(nrow = 4, ncol = 2)
#Matrix
X <- marix(nrow = 4, ncol = 2)
#Matrix
X <- matrix(nrow = 4, ncol = 2)
#Vector Data Type
typeof(age)
typeof(county)
#Item in first row and second column
X[1,2]
X[,1] <- age
X[,2] <- weight
X
idx <- which(X[,1] >70)
Xnew <- X[idx,]
Xnew
colnames(X,c("age","weight"))
subset(X,age>70)
X
#Or
colnames(X) <- c("age","weight")
subset(X,age>70)
#Age >60 and weight >76
subset(X,age > 60 & weight > 76)
D <- data.frame(age <- age, weight <- weight, county <- county)
D
#Data Frames
D <- data.frame(age = age, weight = weight, county = county)
D
D$age
#Access rows with county = Dublin
subset(D,county == "Dublin")
D[1,3]
D <- data.frame(age = age, weight = weight, county = county)
#Query DB for all participants outside Dublin
notDub <- subset(D,county != "Dublin")
val <- mean(notDub$age)
cat("\n", val)
D
setwd("C:/Users/Cormac/Desktop/Statistical Analysis/2-Lab 2")
#Reading and Writing datasets
write.table(D, file.name = "MyData.csv", row.names = FALSE, sep = ",")
#Reading and Writing datasets
write.table(D, file = "MyData.csv", row.names = FALSE, sep = ",")
?write.table
Y <- read.table(file = "MyData.csv", header = TRUE, sep = ",")
Y
#Seperators tab: "\t", space: " "
#Factors
levels(Y)
Y <- read.csv(file = "MyData.csv", header = TRUE)
#Seperators tab: "\t", space: " "
#Factors
levels(Y)
?read.table
Y$county
levels[Y$county]
levels(Y$county)
levels(Y$county)[1] = "Cavan"
Y
Y$age <- Y$age + 2
Y$age
#Lists
#Add 2 to all ages
Y$age <- Y$age + 2
Y$age
setwd("C:/Users/Cormac/Desktop/Statistical Analysis/2-Lab 2")
#Part 1
#Read EU Dataset
EU_Data = read.table(file = "EU_20190102.txt", header = TRUE, sep = ",")
EU_Data['age']
#Read US Dataset
US_Data = read.table(file = "US_2019_02_01.txt", header = TRUE, sep = ",")
#Read US Dataset
US_Data = read.table(file = "US_2019_02_01.txt", header = TRUE, sep = ";")
EU_Data
US_Data
EU_cust_30_40 <- subset(EU_Data,(age >= 30)||(age <= 40))
EU_cust_30_40
#EU customers between 30 and 40 years old (inclusive)
EU_cust_30_40 <- subset(EU_Data,(age >= 30)&(age <= 40))
EU_cust_30_40
t
#Creating CSV of EU customers between 30 and 40 (inclusive)
write.table(EU_cust_30_40, file = "EU_cust_30_40.csv", row.names = FALSE, sep = ",")
EU_cust_ter_bc_mgmt <- subset(EU_Data,(education == "tertiary")&((job == "manager")||(job == "blue-collar")))
EU_cust_ter_bc_mgmt
EU_Data$job
EU_Data$education
EU_cust_ter_bc_mgmt <- subset(EU_Data,(education == "tertiary")&((job == "management")||(job == "blue-collar")))
EU_cust_ter_bc_mgmt
EU_cust_ter_bc_mgmt <- subset(EU_Data,((education == "tertiary")&((job == "management")||(job == "blue-collar"))))
EU_cust_ter_bc_mgmt
EU_cust_ter_bc_mgmt <- subset(EU_Data,((education == "tertiary")&((job == "management")||(job == "blue-collar"))))
EU_cust_ter_bc_mgmt
#Part 2
EU_Data$job
#Part 2
levels(EU_Data$job)
#Create EU customers with tertiary education and blue-collar or management job
EU_cust_ter_bc_mgmt <- subset(EU_Data,((education == "tertiary")&((job == "management")|(job == "blue-collar"))))
View(EU_cust_ter_bc_mgmt)
EU_cust_ter_bc_mgmt <- subset(EU_Data,((education == "tertiary")&((job == "management")|(job == "blue-collar"))))
EU_cust_ter_bc_mgmt
#Creating CSV of EU customers with tertiary education and blue-collar or management job
write.table(EU_cust_ter_bc_mgmt, file = "EU_cust_ter_bc_mgmt.csv", row.names = FALSE, sep = ",")
jobs <- levels(EU_Data$job)
length(jobs)
#Creating CSV of EU customers with tertiary education and blue-collar or management job
write.csv(EU_cust_ter_bc_mgmt, file = "EU_cust_ter_bc_mgmt.csv", row.names = FALSE)
for(i in 1:length(jobs))
{
#Find EU customers with job i
temp_jobs <- subset(EU_Data, job == jobs[i])
temp_jobs
#Create csv
}
for(i in 1:length(jobs))
{
#Find EU customers with job i
temp_jobs <- subset(EU_Data, job == jobs[i])
cat("\n",temp_jobs)
#Create csv
}
#Create CSV name
?cat
#Create CSV name
?paste
job_types <- levels(EU_Data$job)
#Loop through each job, creating the csv for it
for(i in 1:length(job_types))
{
#Store job in variable
current_job <- job_types[i]
#Find EU customers with job i
temp_jobs <- subset(EU_Data, job == current_job)
#Create CSV name
csv_name <- paste("EU_cust_occupation_",current_job,".csv")
#Create CSV
write.table(temp_jobs, file = csv_name, row.names = FALSE, sep = ",")
}
#Part 2
#Adjust admin. to admin for storage
levels(EU_Data$job)
#Part 2
#Adjust admin. to admin for storage
levels(EU_Data$job)[1]
#Part 2
#Adjust admin. to admin for storage
levels(EU_Data$job)[1] <- "admin"
levels(EU_Data$job)[1]
levels(EU_Data$job)[1] <- "admin"
#Get all types of jobs
job_types <- levels(EU_Data$job)
#Loop through each job, creating the csv for it
for(i in 1:length(job_types))
{
#Store job in variable
current_job <- job_types[i]
#Find EU customers with job i
temp_jobs <- subset(EU_Data, job == current_job)
#Create CSV name
csv_name <- paste("EU_cust_occupation_",current_job,".csv")
#Create CSV
write.table(temp_jobs, file = csv_name, row.names = FALSE, sep = ",")
}
#Part 3
#Make all mobile and landline contact variables "teleph" in EU_Data
levels(EU_Data$contact)
levels(EU_Data$contact)[1:2] = "teleph"
levels(EU_Data$contact)[1:2]
levels(EU_Data$contact)[1:2] = "teleph"
levels(EU_Data$contact)
#Read EU Dataset
EU_Data <- read.table(file = "EU_20190102.txt", header = TRUE, sep = ",")
#Part 2
#Adjust admin. to admin for storage
levels(EU_Data$job)[1] <- "admin"
levels(EU_Data$contact)[1:2] = "teleph"
levels(EU_Data$contact
levels(EU_Data$contact)
levels(EU_Data$contact)
US_Data$balance
US_Data$balance = US_Data$balance * 0.87
US_Data$balance
EU_Data["poutcome"]
EU_Data[-"poutcome"]
#Remove poutcome from EU data
EU_Data["poutcome"]
#Remove poutcome from EU data
EU_Data
#Remove poutcome from EU data
EU_Data[16,]
#Remove poutcome from EU data
EU_Data[,16]
#Remove poutcome from EU data
EU_Data[,-16]
EU_Data <- EU_Data[,-16]
EU_Data$source = "EU"
EU_Data$source
US_Data$source = "US"
#Combine data
?rbind
All_Data <- rbind(EU_Data, US_data)
All_Data <- rbind(EU_Data, US_Data)
#Create csv of all data
write.table(All_Data, file = "EU_US_Merge.csv", row.names = FALSE, sep = ",")
levels(US_Data$job)
#Part 1
#Read EU Dataset
EU_Data <- read.table(file = "EU_20190102.txt", header = TRUE, sep = ",")
#Read US Dataset
US_Data <- read.table(file = "US_2019_02_01.txt", header = TRUE, sep = ";")
#Create EU customers between 30 and 40 years old (inclusive)
EU_cust_30_40 <- subset(EU_Data,(age >= 30)&(age <= 40))
#Creating CSV of EU customers between 30 and 40 (inclusive)
write.table(EU_cust_30_40, file = "EU_cust_30_40.csv", row.names = FALSE, sep = ",")
#Create EU customers with tertiary education and blue-collar or management job
EU_cust_ter_bc_mgmt <- subset(EU_Data,((education == "tertiary")&((job == "management")|(job == "blue-collar"))))
#Creating CSV of EU customers with tertiary education and blue-collar or management job
write.table(EU_cust_ter_bc_mgmt, file = "EU_cust_ter_bc_mgmt.csv", row.names = FALSE, sep = ",")
#Part 2
#Adjust admin. to admin for EU and US data so that filename is not later confused and the two match when combined in part 3
levels(EU_Data$job)[1] <- "admin"
levels(US_Data$job)[1] <- "admin"
#Get all types of jobs in EU_Data
job_types <- levels(EU_Data$job)
#Loop through each job, creating the csv of customer data for customers specific to each type of occupation
for(i in 1:length(job_types))
{
#Store job 'i' in variable
current_job <- job_types[i]
#Find EU customers with job 'i'
temp_jobs <- subset(EU_Data, job == current_job)
#Create CSV name
csv_name <- paste("EU_cust_occupation_",current_job,".csv")
#Create CSV
write.table(temp_jobs, file = csv_name, row.names = FALSE, sep = ",")
}
#Part 3
#Make all mobile and landline contact variables "teleph" in EU_Data
levels(EU_Data$contact)[1:2] <- "teleph"
#Convert US data balance from dollars to euros (1 dollar = 0.87 Euro)
US_Data$balance <- US_Data$balance * 0.87
#Remove poutcome from EU data
EU_Data <- EU_Data[,-16]
#Add source (where data came from) to EU and US Data
EU_Data$source <- "EU"
US_Data$source <- "US"
#Combine data
All_Data <- rbind(EU_Data, US_Data)
#Create csv of all data
write.table(All_Data, file = "EU_US_Merge.csv", row.names = FALSE, sep = ",")
levels(All_Data$job)
levels(All_Data$marital)
levels(All_Data$education)
levels(All_Data$job)
